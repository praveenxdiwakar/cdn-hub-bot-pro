from pyrogram import Client, filters
from pyrogram.types import Message
from info import ADMINS
from database.users_db import db
from datetime import datetime

@Client.on_message(filters.private & filters.command("verified_users") & filters.user(ADMINS))
async def verified_users_list(client: Client, message: Message):
    # ‡§Ü‡§ú ‡§ï‡•Ä ‡§§‡§æ‡§∞‡•Ä‡§ñ (yyyy-mm-dd) ‡§ï‡•á ‡§∞‡•Ç‡§™ ‡§Æ‡•á‡§Ç ‡§≤‡•ã
    today = datetime.now().strftime("%Y-%m-%d")

    # ‡§ï‡•á‡§µ‡§≤ ‡§â‡§®‡•ç‡§π‡•Ä‡§Ç ‡§Ø‡•Ç‡§ú‡§º‡§∞‡•ç‡§∏ ‡§ï‡•ã fetch ‡§ï‡§∞‡•ã ‡§ú‡§ø‡§®‡§ï‡§æ verification ‡§Ü‡§ú ‡§π‡•Å‡§Ü ‡§π‡•à
    users = await db.users.find({
        "verification_status.date": today
    }).to_list(length=100)

    if not users:
        return await message.reply_text("‚ùå ‡§Ü‡§ú ‡§ï‡•ã‡§à ‡§≠‡•Ä ‡§Ø‡•Ç‡§ú‡§º‡§∞ verified ‡§®‡§π‡•Ä‡§Ç ‡§π‡•Å‡§Ü ‡§π‡•à‡•§")

    text = "‚úÖ <b>Today Verified Users:</b>\n\n"
    for user in users:
        user_id = user.get("id")
        name = user.get("name", "Unknown")
        date = user.get("verification_status", {}).get("date", "‚ùì")
        time = user.get("verification_status", {}).get("time", "‚ùì")
        text += f"üë§ <b>{name}</b> | <code>{user_id}</code>\nüóìÔ∏è {date} {time}\n\n"

    await message.reply_text(text)
